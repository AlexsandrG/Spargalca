# https://pythonru.com/uroki/operatory-v-python-uroki-po-python-dlja-nachinajushhih
#
# Оператор	Значение	Пример
# +	добавление	4 + 5
# —	вычитание	8 — 3
# *	умножение	5 * 5
# /	деление	4 / 2
# %	остаток от деления	7 % 2
# **	возведение в степень	2 ** 3
# //	целочисленное деление	15 // 4
#
# Операторы присваивания используются для присваивания значений переменным:
#
# Оператор	Пример	Так же как
# =	x = 5	x = 5
# +=	x += 3	x = x + 3
# -=	x -= 3	x = x — 3
# *=	x *= 3	x = x * 3
# /=	x /= 3	x = x / 3
# %=	x %= 3	x = x % 3
# //=	x //= 3	x = x // 3
# **=	x **= 3	x = x ** 3
# &=	x &= 3	x = x & 3
# |=	x |= 3	x = x | 3
# ^=	x ^= 3	x = x ^ 3
# >>=	x >>= 3	x = x >> 3
# <<=	x <<= 3	x = x << 3
#
# Операторы сравнения используются для сравнения двух значений:
#
# Оператор	Значение	Пример
# ==	равно	x == y
# !=	не равно	x != y
# >	больше чем	x > y
# <	меньше чем	x < y
# >=	больше чем или равно	x >= y
# <=	меньше чем или равно	x <= y
#
# Логические операторы используются для объединения условных операторов:
#
# Оператор	Значение	Пример
# and	Возвращает значение True если оба утверждения верны	x < 5 and x < 10
# or	Возвращает True если одно из утверждений верно	x < 5 or x < 4
# not	Меняет результат, возвращает False если результат True	not(x < 5 and x < 10)
#
# Операторы тождественности используются для сравнения объектов. Являются ли они одним и тем же объектом с одинаковым местоположением в памяти:
#
# Оператор	Значение	Пример
# is	Возвращает true если переменные являются одним объектом	x is y
# is not	Возвращает true если переменные разные	x is not y
#
# Операторы принадлежности используются для проверки того, представлена ​​ли последовательность в объекте:
#
# Оператор	Значение	Пример
# in	Возвращает True если последовательность присутствует в объекте	x in y
# not in	Возвращает True если последовательность не присутствует в объекте	x not in y
#
# Побитовые операторы используются для работы в битовом (двоичном) формате:
#
# Оператор	Название	Значение
# &	И	Устанавливает каждый бит в 1, если оба бита 1
# |	Или	Устанавливает каждый бит в 1 если один из двух битов 1
# ^	только или	Устанавливает каждый бит в 1 если только один из битов 1
# ~	Не	Переставляет все биты
# <<	Сдвиг влево	Сдвигает влево на количество бит указанных справа
# >>	Сдвиг вправо	Сдвигает вправо на количество бит указанных справа